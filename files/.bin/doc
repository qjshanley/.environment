#!/usr/bin/env bash

main() {
    : "${STACKS:?This environment variable needs to be defined.}"
    stack="$(compgen -W "$(_doc_ls_)" -- "$1" | head -1)"
    [ "$stack" == "$1" ] && shift 1 || stack="${STACK:-$(_doc_ls_ | head -1)}"
    case $1 in
        exec)   shift 1 ; _doc_exec_ "$@" ;;
        ls)     shift 1 ; _doc_ls_ "$@" ;;
        stats)  shift 1 ; _doc_stats_ "$@" ;;
        *)      _docker-compose "$@" ;;
    esac
}

_doc_exec_() {
    _docker-compose exec "$@"
}

_doc_ls_() { 
    case "$1" in
        -a|--all)
            echo "$(
                for s in $(_doc_ls_) ; do
                    echo "$s"
                    sed -E 's/^/-- /' <<< "$(doc "$s" ps --services)"
                done
            )"
            ;;
        *)
            find -E "$STACKS" -mindepth 1 -maxdepth 1 -type d -regex ".*/[^/.]*" -exec basename {} \; | sort
            ;;
    esac
}

_doc_stats_() {
    docker stats $(docker ps --format "{{.Names}}")
}

_docker-compose() {
    (
        _find() { find -E "$STACKS"/"$stack" -maxdepth 1 -type f -regex ".*$1" | sed -E "s/\.($1)/ \1/" /dev/stdin | sort -k 1 | sed 's/ /./' ; }
        for f in $(_find "pre") ; do source "$f" ; done
        printf -- "docker-compose%s --project-name ${PROJECT_NAME:-$stack} $*\n" "$(printf -- " --file %s" $(_find "[yml|yaml]"))" | bash
        for f in $(_find "post") ; do source "$f" ; done
    )
}

main "$@"
